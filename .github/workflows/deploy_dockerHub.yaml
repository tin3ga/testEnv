name: Build & Deploy Docker Image

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build_scan_deploy:
    name: build docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker Engine
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          tags: ${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha, mode=max
          platforms: linux/amd64

      - name: Run Trivy vulnerability scanner - Non Blocking
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ github.run_id }}
          format: "table"
          exit-code: 0 # Non blocking

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 1 # Blocking
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: tinegagideon/testEnv:latest
          cache-from: type=gha
          cache-to: type=gha, mode=max
          platforms: linux/amd64,linux/arm64